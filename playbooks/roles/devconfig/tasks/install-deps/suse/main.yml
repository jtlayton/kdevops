---
- name: Set generic SUSE specific distro facts
  set_fact:
    is_sle: '{{ (ansible_distribution == "SLES") or (ansible_distribution == "SLED") }}'
    is_leap: '{{ "Leap" in ansible_distribution }}'
    is_tumbleweed: '{{ "openSUSE Tumbleweed" == ansible_distribution }}'
  tags: [ 'vars' ]

- name: Set SLE specific version labels to make checks easier
  set_fact:
    is_sle10: '{{ ansible_distribution_major_version == "10" }}'
    is_sle11: '{{ ansible_distribution_major_version == "11" }}'
    is_sle12: '{{ ansible_distribution_major_version == "12" }}'
    is_sle15: '{{ ansible_distribution_major_version == "15" }}'
    is_sle10sp3: '{{ ansible_distribution_version == "10.3" }}'
    is_sle11sp1: '{{ ansible_distribution_version == "11.1" }}'
    is_sle11sp4: '{{ ansible_distribution_version == "11.4" }}'
    is_sle12sp1: '{{ ansible_distribution_version == "12.1" }}'
    is_sle12sp3: '{{ ansible_distribution_version == "12.3" }}'
    is_sle12sp5: '{{ ansible_distribution_version == "12.5" }}'
    is_sle15sp2: '{{ ansible_distribution_version == "15.2" }}'
    is_sle15sp3: '{{ ansible_distribution_version == "15.3" }}'
    is_sle15sp4: '{{ ansible_distribution_version == "15.4" }}'
  when:
    - is_sle|bool
  tags: [ 'vars' ]

- name: Set SLE specific version labels to make checks easier when not SLE
  set_fact:
    is_sle10: False
    is_sle11: False
    is_sle12: False
    is_sle15: False
    is_sle10sp3: False
    is_sle11sp1: False
    is_sle11sp4: False
    is_sle12sp1: False
    is_sle12sp3: False
    is_sle12sp5: False
    is_sle15sp2: False
    is_sle15sp3: False
    is_sle15sp4: False
  when:
    - not is_sle|bool
  tags: [ 'vars' ]

- name: The default is to assume we have figured out how to add repos for each
  set_fact:
    repos_will_be_added: true
  tags: vars

- name: Disable things which require a repo to be set but that cannot be done
  set_fact:
    repos_will_be_added: false
  when:
    - not devconfig_repos_addon|bool
    - is_sle|bool
    - is_sle10|bool or is_sle11|bool
  tags: [ 'vars' ]

- name: The default is to assume we are not on sle11 or sle10
  set_fact:
    sle10_or_11: false
  tags: snmpd

- name: Are we on SLE11 or SLE10?
  set_fact:
    sle10_or_11: true
  when:
    - is_sle|bool
    - is_sle10|bool or is_sle11|bool
  tags: [ 'vars' ]

- name: The default is to assume all distros supports nvme-utils
  set_fact:
    lacks_nvme_utils: false
  tags: [ 'vars' ]

- name: Does this release lack nvme-utils
  set_fact:
    lacks_nvme_utils: true
  when:
    - is_sle|bool
    - is_sle10|bool or is_sle11|bool or is_sle12sp1|bool
  tags: [ 'vars' ]

- name: The default is to assume all distros supports git-core
  set_fact:
    lacks_git_core: false
  tags: [ 'vars' ]

- name: Does this release lack git-core
  set_fact:
    lacks_git_core: true
  when:
    - is_sle|bool
    - is_sle10|bool or is_sle11|bool or is_sle12sp1|bool or is_sle12sp3|bool
  tags: [ 'vars' ]

- name: Does this release use the package name git assume false
  set_fact:
    use_git_package: false
  tags: [ 'vars' ]

# This needs perl-Error, so fix that first
- name: Does this release use the package name git
  set_fact:
    use_git_package: true
  when:
    - is_sle|bool
    - is_sle12sp3|bool
    - false
  tags: [ 'vars' ]

- name: The default is to assume all distros supports xfsdump
  set_fact:
    lacks_xfsdump: false
  tags: [ 'vars' ]

- name: Does this release lack xfsdump
  set_fact:
    lacks_xfsdump: true
  when:
    - is_sle|bool
    - is_sle10|bool or is_sle11|bool
  tags: [ 'vars' ]

- name: The default is to assume all distros have fio on the main repo
  set_fact:
    lacks_fio_main_repo: False
  tags: [ 'vars' ]

# SLES12-SP1 has fio but on ses/2.1/x86_64 repo, and you need another
# registration key for that. We simply skip fio on it, but only if
# registering a system. If we use internal repos, it likely *should*
# be available.
- name: Does this release lack fio on the main repository
  set_fact:
    lacks_fio_main_repo: True
  when:
    - is_sle|bool
    - is_sle10|bool or is_sle11|bool or is_sle12sp1|bool or is_sle12sp3|bool or is_sle12sp5|bool
    - suse_register_system|bool or devconfig_repos_addon|bool
  tags: [ 'vars' ]

- name: Verify SLE/SLED systems are being registered
  fail:
    msg: "System is SLE/SLED, must include SUSE registration info on playbooks/secret.yml with suse_register_system and suse_registration_code variables set."
  when:
    - not devconfig_repos_addon|bool
    - 'is_sle|bool'
    - 'not suse_register_system|bool'

- name: Prepare packages source list and register machine
  become: yes
  become_method: sudo
  script:
    cmd: "{{ role_path }}/scripts/prepare_suse_repos.sh --register-system-code {{ suse_registration_code }}"
  when:
    - suse_register_system|bool
    - repos_will_be_added|bool
    - suse_registration_code != 0

- name: Assume we have the python2 product for sles15sp first
  set_fact:
    sle15_has_python2_product: True
  when:
    - suse_register_system|bool
    - repos_will_be_added|bool
    - suse_registration_code != 0
    - is_sle15|bool
  tags: [ 'vars' ]

- name: Disable the python2 product for sles15sp4
  set_fact:
    sle15_has_python2_product: False
  when:
    - suse_register_system|bool
    - repos_will_be_added|bool
    - suse_registration_code != 0
    - is_sle15|bool
    - is_sle15sp4|bool
  tags: [ 'vars' ]


- name: Register for python2 module product when needed
  become: yes
  become_method: sudo
  command: "SUSEConnect -p sle-module-python2/{{ ansible_distribution_version }}/{{ ansible_architecture }}"
  when:
    - suse_register_system|bool
    - repos_will_be_added|bool
    - suse_registration_code != 0
    - is_sle15|bool
    - sle15_has_python2_product|bool

- name: Add extra addon repositories when enabled
  become: yes
  become_method: sudo
  script:
    cmd: "{{ role_path }}/scripts/add-suse-repo-if-not-found.sh {{ item.url }} {{ item.name }}"
  with_items:
    - "{{ devconfig_repos_addon_list }}"
  loop_control:
    label: "Adding repo"
  when:
    - devconfig_repos_addon|bool

- name: Install missing python-xml for releases that need it manually
  become: yes
  become_method: sudo
  command:
    cmd: "zypper in -y python-xml"
    warn: no
  when:
    - (suse_register_system|bool and suse_registration_code != 0) or devconfig_repos_addon|bool
    - repos_will_be_added|bool
    - not is_sle15sp4|bool
    - is_sle15|bool

- name: Prepare packages source list
  become: yes
  become_method: sudo
  script:
    cmd: "{{ role_path }}/scripts/prepare_suse_repos.sh"
  when:
    - not suse_register_system|bool
    - not is_sle|bool
    - repos_will_be_added|bool

- name: Do full upgrade
  become: yes
  become_method: sudo
  zypper:
    state: dist-upgrade
    name: '*'
  when:
    - repos_will_be_added|bool
    - devconfig_try_upgrade|bool

- name: Reboot system to make the new kernel and modules take effect
  become: yes
  become_method: sudo
  reboot:
  when:
    - repos_will_be_added|bool
    - devconfig_try_upgrade|bool

- name: Install nvme tools
  become: yes
  become_method: sudo
  zypper:
    name:
      - nvme-cli
    state: present
  when:
    - repos_will_be_added|bool
    - not lacks_nvme_utils|bool
    - devconfig_try_install_kdevtools|bool

- name: Install fio when possible
  become: yes
  become_method: sudo
  zypper:
    name:
      - fio
    state: present
  when:
    - repos_will_be_added|bool
    - not lacks_fio_main_repo|bool
    - devconfig_try_install_kdevtools|bool

- name: Install git-core when possible
  become: yes
  become_method: sudo
  zypper:
    name:
      - git-core
    state: present
  when:
    - repos_will_be_added|bool
    - not lacks_git_core|bool
    - devconfig_try_install_kdevtools|bool

- name: Install git when possible
  become: yes
  become_method: sudo
  zypper:
    name:
      - git
    state: present
  when:
    - repos_will_be_added|bool
    - use_git_package|bool
    - devconfig_try_install_kdevtools|bool

- name: Install xfsdump when possible
  become: yes
  become_method: sudo
  zypper:
    name:
      - xfsdump
    state: present
  when:
    - repos_will_be_added|bool
    - not lacks_xfsdump|bool
    - devconfig_try_install_kdevtools|bool

- name: Install packages on newer distro when possible
  become: yes
  become_method: sudo
  zypper:
    name:
      - bison
      - libaio-devel
      - gcc
    state: present
  when:
    - repos_will_be_added|bool
    - not lacks_git_core|bool
    - devconfig_try_install_kdevtools|bool

# sle12sp3 needs m4 to install flex, fix that first
- name: Install packages not available on sle11 or sle10
  become: yes
  become_method: sudo
  zypper:
    name:
      - dump
      - flex
      - ncurses-devel
    state: present
  when:
    - repos_will_be_added|bool
    - not sle10_or_11|bool
    - not is_sle12sp3|bool
    - devconfig_try_install_kdevtools|bool

# fix this for sle12sp3
- name: Install packages we typically care about
  become: yes
  become_method: sudo
  zypper:
    name:
      - e2fsprogs
      - xfsprogs
      - btrfsprogs
      - lvm2
      - make
      - gawk
      - libtool
      - psmisc
      - sed
      - vim
      - screen
      - diffutils
      - net-tools
      - openssh
      - bc
      - vim-data
      - trace-cmd
      - perf
    state: present
  when:
    - not is_sle12sp3|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool

- name: Set default values for if we install snmp / kdump
  set_fact:
    install_snmp: False
    install_kdump: False
  tags: [ 'vars' ]

- name: Set if we install snmp / kdump
  set_fact:
    install_snmp: True
    install_kdump: True
  when:
    - is_sle15|bool or is_tumbleweed
  tags: [ 'vars' ]

- name: Install snmp
  become: yes
  become_method: sudo
  zypper:
    name:
      - net-snmp
  when:
    - install_snmp|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Set up snmp
  become: yes
  become_method: sudo
  template:
    src: snmpd.conf
    dest: /etc/snmp/snmpd.conf
  when:
    - install_snmp|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Enable snmpd service
  become: yes
  become_method: sudo
  systemd:
    name: snmpd
    enabled: yes
    masked: no
  when:
    - install_snmp|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Start snmpd service
  become: yes
  become_method: sudo
  systemd:
    name: snmpd
    state: restarted
  when:
    - install_snmp|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Install kdump
  become: yes
  become_method: sudo
  zypper:
    name:
      - kdump
  when:
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: kdump

- name: Get kdump calibration high
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  shell: kdumptool calibrate | grep ^High | awk '{print $2}'
  register: kdump_high
  when:
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: kdump

- name: Get kdump calibration low
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  shell: kdumptool calibrate | grep ^Low | awk '{print $2}'
  register: kdump_low
  when:
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: kdump

- name: Check to see if kdump is configured on your GRUB config
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  register: kdump_grep
  lineinfile:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=\")(.*)(\s*)crashkernel(.*)'
    line: ''
  check_mode: yes
  when:
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: [ 'kdump' ]

- name: Update GRUB configuration to add kdump knobs
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  lineinfile:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=\")((\s*)(.*)*)(\s*)"$'
    backrefs: yes
    line: '\1\2 crashkernel={{ kdump_high.stdout }}M,high crashkernel={{ kdump_low.stdout }}M,low"'
  when:
    - not kdump_grep.changed
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: [ 'kdump' ]

- name: Update your boot GRUB file if necessary
  import_tasks: update-grub/main.yml
  when:
    - not kdump_grep.changed
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool

- name: Reboot system to ensure kdump is effective
  become: yes
  become_method: sudo
  reboot:
  tags: [ 'kdump' ]

- name: Enable kdump service
  become: yes
  become_method: sudo
  systemd:
    name: kdump
    enabled: yes
    masked: no
  when:
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: kdump

- name: Start kdump service
  become: yes
  become_method: sudo
  systemd:
    name: kdump
    state: restarted
  when:
    - install_kdump|bool
    - repos_will_be_added|bool
    - devconfig_try_install_kdevtools|bool
  tags: kdump

- name: Install systemd-journal-remote
  become: yes
  become_method: sudo
  zypper:
    name:
      - systemd-journal-remote
  when:
    - devconfig_enable_systemd_journal_remote|bool
    - repos_will_be_added|bool
  tags: journal

- name: Install systemd-timesyncd
  become: yes
  become_method: sudo
  zypper:
    name:
      - systemd-timesyncd
  when:
    - devconfig_enable_systemd_timesyncd|bool
    - repos_will_be_added|bool
  tags: timesyncd
