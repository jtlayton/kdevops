- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "../extra_vars.yml"
      - "../extra_vars.yaml"
      - "../extra_vars.json"
      skip: true
  tags: vars

- name: Set the path where we collect our local pynfs results
  set_fact:
    pynfs_workflow_dir: "../workflows/pynfs"
  tags: [ 'vars' ]

- name: Clean up our localhost results directory and files
  local_action: file path="{{ pynfs_workflow_dir }}/results/" state=absent
  run_once: true
  tags: [ 'clean_local_results' ]

- name: Create the local results directory
  local_action: file path="{{ pynfs_workflow_dir }}/results/" state=directory
  run_once: true
  tags: [ 'first_run' ]

- include_role:
    name: create_data_partition
  tags: [ 'data_partition' ]

# Distro specific
- include: tasks/install-deps/main.yml

- name: Remove old pynfs dir as we always clone a fresh tree
  tags: [ 'git', 'pynfs' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  file:
    path: "{{ pynfs_data }}"
    state: absent

- name: git clone pynfs
  tags: [ 'git', 'pynfs' ]
  git:
    repo: "{{ pynfs_git }}"
    dest: "{{ pynfs_data }}"
    update: yes
    version: "{{ pynfs_git_tag }}"
  retries: 3
  delay: 5
  register: result
  until: not result.failed

- name: Build pynfs
  tags: [ 'pynfs' ]
  command: ./setup.py build
  args:
    chdir: "{{ pynfs_data }}"

- name: Get the hostname of the NFS server and base volname
  tags: [ 'vars' ]
  set_fact:
    nfsd_hostname: "{{ kdevops_host_prefix }}-nfsd"
    volname_base: "{{ ansible_host }}-pynfs"

- name: Create an export for NFSv4.0 testing
  tags: [ 'pynfs' ]
  include_role:
    name: nfsd_add_export
  vars:
    server_host: "{{ nfsd_hostname }}"
    export_volname: "{{ volname_base }}-4.0"
    export_fstype: "{{ nfsd_export_fstype }}"
    export_size: 10g

- name: Create an export for NFSv4.1 testing
  tags: [ 'pynfs' ]
  include_role:
    name: nfsd_add_export
  vars:
    server_host: "{{ nfsd_hostname }}"
    export_volname: "{{ volname_base }}-4.1"
    export_fstype: "{{ nfsd_export_fstype }}"
    export_size: 10g

- name: Wait until nfsd grace period ends
  tags: [ 'run_tests' ]
  delegate_to: "{{ nfsd_hostname }}"
  command: /usr/bin/grep -q Y /proc/fs/nfsd/v4_end_grace
  register: result
  retries: 90
  delay: 1
  until: result.rc == 0

- name: Run pynfs
  tags: [ 'run_tests' ]
  script: "{{ pynfs_workflow_dir }}/scripts/run_pynfs.sh"
  environment:
    PYNFS_DATA: "{{ pynfs_data }}"
    EXPORT_BASE: "{{ nfsd_hostname }}:{{ nfsd_export_path }}/{{ volname_base }}"
    ANSIBLE_HOST: "{{ ansible_host }}"

- name: Get used target kernel version
  tags: [ 'copy_results' ]
  command: "uname -r"
  register: uname_cmd

- name: Store kernel_rev variable
  tags: [ 'copy_results' ]
  set_fact:
    kernel_rev: "{{ uname_cmd.stdout_lines | regex_replace('\\]') | regex_replace('\\[') | replace(\"'\",'') }}"
  run_once: true

- name: Copy the latest results over when we're done
  tags: [ 'copy_results' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  fetch:
    src: "{{ pynfs_data }}/pynfs-{{ item }}-results.json"
    dest: "{{ pynfs_workflow_dir }}/results/{{ kernel_rev }}-v{{ item }}.json"
    flat: yes
  with_items:
    - 4.0
    - 4.1
