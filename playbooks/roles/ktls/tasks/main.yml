- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "../extra_vars.yml"
      - "../extra_vars.yaml"
      - "../extra_vars.json"
      skip: true

- name: Install dependencies
  import_tasks: install-deps/main.yml

- name: Construct the path to the CA directory
  delegate_to: localhost
  set_fact:
    ca_dir: "{{ topdir_path }}/ca/{{ kdevops_host_prefix }}"

- name: Create directory to hold the CA on local host
  delegate_to: localhost
  run_once: true
  ansible.builtin.file:
    path: "{{ ca_dir }}"
    state: directory

- name: Create private key for CA
  delegate_to: localhost
  run_once: true
  community.crypto.openssl_privatekey:
    path: "{{ ca_dir }}/ca-cert.key"

- name: Create certificate signing request (CSR) for CA certificate
  delegate_to: localhost
  run_once: true
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ ca_dir }}/ca-cert.key"
    common_name: "kdevops {{ kdevops_host_prefix }} CA"
    use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr

- name: Create self-signed CA certificate from CSR
  delegate_to: localhost
  run_once: true
  community.crypto.x509_certificate:
    path: "{{ ca_dir }}/ca-cert.pem"
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: "{{ ca_dir }}/ca-cert.key"
    provider: selfsigned

- name: Create private key for new TLS certificate
  community.crypto.openssl_privatekey:
    path: "/etc/pki/tls/private/ktls.key"
  become: yes

- name: Copy CA cert to all of the hosts
  ansible.builtin.copy:
    src: "{{ ca_dir }}/ca-cert.pem"
    dest: "/etc/pki/tls/certs/ca-cert.pem"
    owner: root
    group: root
    mode: 0644
  become: yes

- name: Create certificate signing request (CSR) for new certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "/etc/pki/tls/private/ktls.key"
    subject_alt_name:
      - "DNS:{{ ansible_host }}"
      - "IP:{{ ansible_default_ipv4.address }}"
  register: csr
  become: yes

- name: Sign certificate with our CA
  community.crypto.x509_certificate_pipe:
    csr_content: "{{ csr.csr }}"
    provider: ownca
    ownca_path: "{{ ca_dir }}/ca-cert.pem"
    ownca_privatekey_path: "{{ ca_dir }}/ca-cert.key"
    ownca_not_after: +365d  # valid for one year
    ownca_not_before: "-1d"  # valid since yesterday
  delegate_to: localhost
  register: certificate

- name: Write certificate file on host
  copy:
    dest: "/etc/pki/tls/certs/ktls.pem"
    content: "{{ certificate.certificate }}"
  become: yes

- name: Install new /etc/tlshd.conf
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/roles/ktls/templates/tlshd.conf"
    dest: "/etc/tlshd.conf"
    owner: root
    group: root
    mode: 0644
  become: yes

- name: Enable and start tlshd
  become: yes
  ansible.builtin.systemd_service:
    name: tlshd.service
    enabled: true
    state: reloaded
