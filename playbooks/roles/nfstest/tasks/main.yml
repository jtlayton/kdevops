- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "../extra_vars.yml"
      - "../extra_vars.yaml"
      - "../extra_vars.json"
      skip: true
  tags: vars

- name: Set the path where we collect our local nfstest results
  set_fact:
    nfstest_local_results_dir: "../workflows/nfstest/results"
  tags: [ 'vars' ]

- name: Clean up our localhost results directory and files
  local_action: file path="{{ nfstest_local_results_dir }}/" state=absent
  run_once: true
  tags: [ 'clean_local_results', 'first_run' ]

- name: Create the local results directory
  local_action: file path="{{ nfstest_local_results_dir }}/" state=directory
  run_once: true
  tags: [ 'first_run' ]

- include_role:
    name: create_data_partition
  tags: [ 'data_partition' ]

# Distro specific
- include: tasks/install-deps/main.yml

- name: Remove old nfstest dir as we always clone a fresh tree
  tags: [ 'git', 'nfstest' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  file:
    path: "{{ nfstest_data }}"
    state: absent

- name: git clone nfstest
  tags: [ 'git', 'nfstest' ]
  git:
    repo: "{{ nfstest_git }}"
    dest: "{{ nfstest_data }}"
    update: yes
    version: master
  retries: 3
  delay: 5
  register: result
  until: not result.failed

- name: Build nfstest
  tags: [ 'nfstest' ]
  command: ./setup.py build
  args:
    chdir: "{{ nfstest_data }}"

- name: Wait until nfsd grace period ends
  tags: [ 'run_tests' ]
  command: /usr/bin/grep Y /proc/fs/nfsd/v4_end_grace
  register: result
  retries: 90
  delay: 1
  until: result.rc == 0

- name: Run nfstest
  tags: [ 'run_tests' ]
  shell: "env PYTHONPATH=$(PWD) python3.9 ./tests/nfstest_posix -s "
  args:
    chdir: "{{ nfstest_data }}"
  with_items:
    - 3
    - 4.0
    - 4.1

- name: Get used target kernel version
  tags: [ 'copy_results' ]
  command: "uname -r"
  register: uname_cmd

- name: Store kernel_rev variable
  tags: [ 'copy_results' ]
  set_fact:
    kernel_rev: "{{ uname_cmd.stdout_lines | regex_replace('\\]') | regex_replace('\\[') | replace(\"'\",'') }}"
  run_once: true

- name: Copy the latest results over when we're done
  tags: [ 'copy_results' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  fetch:
    src: "{{ nfstest_data }}/nfstest-{{ item }}-results.json"
    dest: "{{ nfstest_local_results_dir }}/{{ kernel_rev }}-v{{ item }}.json"
    flat: yes
  with_items:
    - 4.0
    - 4.1
